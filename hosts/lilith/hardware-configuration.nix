# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usb_storage"
    "sd_mod"
    "rtsx_pci_sdmmc"
  ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  # boot.kernelPackages = pkgs.linuxPackages_latest;

  # Critical kernel parameters for Nvidia KMS and video memory preservation
  # boot.kernelParams = [
  #   "nvidia-drm.modeset=1" # Allows for early modeset in init
  #   "nvidia.NVreg_PreserveVideoMemoryAllocations=1" # Helps with suspend/resume, flicker
  # ];

  # boot.kernelPackages = pkgs.linuxPackagesFor pkgs.linux_6_16;
  # boot.kernelPackages = pkgs.linuxPackagesFor (pkgs.linux_6_16.override {
  #   argsOverride = rec {
  #     src = pkgs.fetchurl {
  #           url = "mirror://kernel/linux/kernel/v6.x/linux-${version}.tar.xz";
  #           sha256 = "sha256-dr/7rn6rKh3h7QVpK+9wn0OwKlL+la5lXKzw+iUiE/M=";
  #     };
  #     version = "6.16.5";
  #     modDirVersion = "6.16.5";
  #     };
  # });

  # Ensure modules load in correct order
  # boot.extraModprobeConfig = ''
  #   options nvidia-drm modeset=1
  #   softdep nvidia pre: nvidia-drm
  # '';

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f75907ab-9b04-4d20-83a9-d4900839e29e";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/5212-1BF7";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0f0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
